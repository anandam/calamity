#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'calamity_version'
require 'calamity_task'
require 'calamity_data_access'
require 'sqlite3'

include GLI

program_desc 'Calamity is a life hacking tool'

version Calamity::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Add a task'
arg_name 'Describe arguments to add here'
command :add do |c|
  c.desc 'Describe a switch to add'
  c.switch :s

  c.desc 'Describe a flag to add'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|
    task = Calamity::Task.new
    task.name = args[1]
    Calamity::DataAccess.add_task task
    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"
  end
end

desc 'Describe list here'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.action do |global_options,options,args|
  end
end

desc 'Describe done here'
arg_name 'Describe arguments to done here'
command :done do |c|
  c.action do |global_options,options,args|
  end
end

pre do |global,command,options,args|
  if !Dir.entries("#{ENV['HOME']}").include?(".calamity")
    Dir.mkdir "#{ENV['HOME']}/.calamity"
    Calamity::DataAccess.init
  end  
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  puts exception
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
